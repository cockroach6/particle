#!/bin/python3

# main source of examples
# https://github.com/python273/vk_api/blob/master/examples
# https://github.com/python273/vk_api



import os
import sys
import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType


def move_process_to_background():
    print ("This is the parent PID {}".format(os.getpid()))
    try:
        pid = os.fork(  )
        if pid > 0:
            # Exit first parent
            sys.exit(0)
    except OSError as e:
        print("fork #1 failed: {} ({})".format(e.errno, e.strerror), sys.stderr)
        sys.exit(1)

    print("Detaching from parent environment")

    # Detach from parent environment
    os.chdir("/")
    os.setsid()
    os.umask(0)

    # Do second fork
    try:
        pid = os.fork()
        if pid > 0:
            # Exit from second parent; print eventual PID before exiting
            print("Detached Daemon PID {}".format(pid))
            sys.exit(0)
    except OSError as e:
        print("fork #2 failed:{} ({})".format(e.errno, e.strerror), sys.stderr)
        sys.exit(1)


def reply(uid):
	msg = "I made Mr Virm aware about you."
	vk_session.method("messages.send", {'user_id': uid, 'message' : msg, 'random_id' : 0})


def cmderror(uid, _cmd):
	msg = "Error: there's no command `{cmd}'. Please, use correct one.".format(cmd=_cmd)
	vk_session.method("messages.send", {'user_id': uid, 'message' : msg, 'random_id' : 0})


def mark_step (i, msg):
	with open ("/home/kali/redb-file", "a") as f:
		f.write ("from redb itself ")
		f.write (str (i))
		f.write (msg)
		f.write ("\n\n")


def main():
	session_api = vk_session.get_api()
	longpoll = VkLongPoll(vk_session)
	i = 0;
	j = 0;

	# main loop for incoming messages
	for event in longpoll.listen():
		if event.type == VkEventType.MESSAGE_NEW:
			if event.to_me:
				uid = event.user_id
				cmd = event.text.lower()

				if (cmd == "/redb"):
					# aware me on all terminal sessions
					os.system ("redb-notif")

					reply(uid)
				else:
					cmderror(uid, cmd)
					continue
	return 0



if __name__ == '__main__':
	move_process_to_background()

	# get token from file for vk bot
	with open ("/media/kali/box/home/kali/.config/box/redb_token") as f:
		token = f.read ().strip ('\n')
	vk_session = vk_api.VkApi(token = token)
	main()
